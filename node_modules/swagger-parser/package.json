{
  "_from": "swagger-parser",
  "_id": "swagger-parser@8.0.0",
  "_inBundle": false,
  "_integrity": "sha512-zk6ig8J2B4OqCnBSIqO67/Ui96NTjuoX10YGa4YVlIlQzLpHUZbLFZaO+zSubQoqAiJxmpvlbUplEcFIsPCESA==",
  "_location": "/swagger-parser",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "swagger-parser",
    "fetchSpec": "latest",
    "name": "swagger-parser",
    "raw": "swagger-parser",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/swagger-parser/-/swagger-parser-8.0.0.tgz",
  "_shasum": "7a714c98a9a7a4ce81331336c1f53bb89f5d4e2f",
  "_shrinkwrap": null,
  "_spec": "swagger-parser",
  "_where": "/home/vi109/Faizan-Vahevaria/StarUML/staruml-cefact",
  "author": {
    "name": "James Messinger",
    "url": "https://jamesmessinger.com"
  },
  "bugs": {
    "url": "https://github.com/APIDevTools/swagger-parser/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "call-me-maybe": "^1.0.1",
    "json-schema-ref-parser": "^7.1.0",
    "ono": "^5.0.1",
    "openapi-schemas": "^1.0.0",
    "openapi-types": "^1.3.5",
    "swagger-methods": "^2.0.0",
    "z-schema": "^4.1.0"
  },
  "deprecated": false,
  "description": "Swagger 2.0 and OpenAPI 3.0 parser and validator for Node and browsers",
  "devDependencies": {
    "@babel/polyfill": "^7.4.4",
    "@types/node": "^12.0.10",
    "chai": "^4.2.0",
    "coveralls": "^3.0.4",
    "eslint": "^6.0.0",
    "eslint-config-modular": "^7.0.0",
    "host-environment": "^1.1.3",
    "karma": "^4.1.0",
    "karma-cli": "^2.0.0",
    "karma-config": "^1.5.2",
    "mocha": "^6.1.4",
    "node-fetch": "^2.6.0",
    "node-sass": "^4.12.0",
    "npm-check": "^5.9.0",
    "nyc": "^14.1.1",
    "simplifyify": "^7.0.2",
    "typescript": "^3.5.2",
    "version-bump-prompt": "^5.0.3"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://apidevtools.org/swagger-parser/",
  "keywords": [
    "dereference",
    "json",
    "open-api",
    "openapi",
    "parse",
    "parser",
    "reference",
    "schema",
    "spec",
    "specification",
    "swagger",
    "validate",
    "validation",
    "validator",
    "yaml"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "swagger-parser",
  "optionalDependencies": {},
  "readme": "Swagger 2.0 and OpenAPI 3.0 parser/validator\n============================\n\n[![Build Status](https://api.travis-ci.org/APIDevTools/swagger-parser.svg?branch=master)](https://travis-ci.org/APIDevTools/swagger-parser)\n[![Coverage Status](https://coveralls.io/repos/github/APIDevTools/swagger-parser/badge.svg?branch=master)](https://coveralls.io/github/APIDevTools/swagger-parser)\n[![Tested on APIs.guru](https://api.apis.guru/badges/tested_on.svg)](https://apis.guru/browse-apis/)\n\n[![npm](https://img.shields.io/npm/v/swagger-parser.svg)](https://www.npmjs.com/package/swagger-parser)\n[![Dependencies](https://david-dm.org/APIDevTools/swagger-parser.svg)](https://david-dm.org/APIDevTools/swagger-parser)\n[![License](https://img.shields.io/npm/l/swagger-parser.svg)](LICENSE)\n\n[![OS and Browser Compatibility](https://apidevtools.org/img/badges/ci-badges-with-ie.svg)](https://travis-ci.com/APIDevTools/swagger-parser)\n\n[![Online Demo](https://apidevtools.org/swagger-parser/online/img/demo.svg)](https://apidevtools.org/swagger-parser/online/)\n\nFeatures\n--------------------------\n- Parses Swagger specs in **JSON** or **YAML** format\n- Validates against the [Swagger 2.0 schema](https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v2.0/schema.json) or [OpenAPI 3.0 Schema](https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v3.0/schema.json)\n- [Resolves](https://apidevtools.org/swagger-parser/docs/swagger-parser.html#resolveapi-options-callback) all `$ref` pointers, including external files and URLs\n- Can [bundle](https://apidevtools.org/swagger-parser/docs/swagger-parser.html#bundleapi-options-callback) all your Swagger files into a single file that only has _internal_ `$ref` pointers\n- Can [dereference](https://apidevtools.org/swagger-parser/docs/swagger-parser.html#dereferenceapi-options-callback) all `$ref` pointers, giving you a normal JavaScript object that's easy to work with\n- **[Tested](https://travis-ci.com/APIDevTools/swagger-parser)** in Node.js and all modern web browsers on Mac, Windows, and Linux\n- Tested on **[over 1,500 real-world APIs](https://apis.guru/browse-apis/)** from Google, Instagram, Spotify, etc.\n- Supports [circular references](https://apidevtools.org/swagger-parser/docs/#circular-refs), nested references, back-references, and cross-references\n- Maintains object reference equality &mdash; `$ref` pointers to the same value always resolve to the same object instance\n\n\nRelated Projects\n--------------------------\n- [Swagger CLI](https://github.com/APIDevTools/swagger-cli)\n- [Swagger Express Middleware](https://github.com/APIDevTools/swagger-express-middleware)\n\n\nExample\n--------------------------\n\n```javascript\nSwaggerParser.validate(myAPI, (err, api) => {\n  if (err) {\n    console.error(err);\n  }\n  else {\n    console.log(\"API name: %s, Version: %s\", api.info.title, api.info.version);\n  }\n});\n```\n\nOr use `async`/`await` or [Promise](http://javascriptplayground.com/blog/2015/02/promises/) syntax instead. The following example is the same as above:\n\n```javascript\ntry {\n  let api = await SwaggerParser.validate(myAPI);\n  console.log(\"API name: %s, Version: %s\", api.info.title, api.info.version);\n}\ncatch(err) {\n  console.error(err);\n}\n```\n\nFor more detailed examples, please see the [API Documentation](https://apidevtools.org/swagger-parser/docs/)\n\n\n\nInstallation\n--------------------------\nInstall using [npm](https://docs.npmjs.com/about-npm/):\n\n```bash\nnpm install swagger-parser\n```\n\n\n\nUsage\n--------------------------\nWhen using Swagger Parser in Node.js apps, you'll probably want to use **CommonJS** syntax:\n\n```javascript\nconst SwaggerParser = require(\"swagger-parser\");\n```\n\nWhen using a transpiler such as [Babel](https://babeljs.io/) or [TypeScript](https://www.typescriptlang.org/), or a bundler such as [Webpack](https://webpack.js.org/) or [Rollup](https://rollupjs.org/), you can use **ECMAScript modules** syntax instead:\n\n```javascript\nimport SwaggerParser from \"swagger-parser\";\n```\n\n\n\nBrowser support\n--------------------------\nSwagger Parser supports recent versions of every major web browser.  Older browsers may require [Babel](https://babeljs.io/) and/or [polyfills](https://babeljs.io/docs/en/next/babel-polyfill).\n\nTo use Swagger Parser in a browser, you'll need to use a bundling tool such as [Webpack](https://webpack.js.org/), [Rollup](https://rollupjs.org/), [Parcel](https://parceljs.org/), or [Browserify](http://browserify.org/). Some bundlers may require a bit of configuration, such as setting `browser: true` in [rollup-plugin-resolve](https://github.com/rollup/rollup-plugin-node-resolve).\n\n\n\nAPI Documentation\n--------------------------\nFull API documentation is available [right here](https://apidevtools.org/swagger-parser/docs/)\n\n\nContributing\n--------------------------\nI welcome any contributions, enhancements, and bug-fixes.  [File an issue](https://github.com/APIDevTools/swagger-parser/issues) on GitHub and [submit a pull request](https://github.com/APIDevTools/swagger-parser/pulls).\n\n#### Building/Testing\nTo build/test the project locally on your computer:\n\n1. __Clone this repo__<br>\n`git clone https://github.com/APIDevTools/swagger-parser.git`\n\n2. __Install dependencies__<br>\n`npm install`\n\n3. __Run the build script__<br>\n`npm run build`\n\n4. __Run the tests__<br>\n`npm test`\n\n\nLicense\n--------------------------\nSwagger Parser is 100% free and open-source, under the [MIT license](LICENSE). Use it however you want.\n\nBig Thanks To\n--------------------------\nThanks to these awesome companies for their support of Open Source developers ‚ù§\n\n[![Travis CI](https://jsdevtools.org/img/badges/travis-ci.svg)](https://travis-ci.com)\n[![SauceLabs](https://jsdevtools.org/img/badges/sauce-labs.svg)](https://saucelabs.com)\n[![Coveralls](https://jsdevtools.org/img/badges/coveralls.svg)](https://coveralls.io)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/APIDevTools/swagger-parser.git"
  },
  "scripts": {
    "build": "npm run build:website && npm run build:sass",
    "build:sass": "node-sass --source-map true --output-style compressed online/src/scss/style.scss online/css/style.min.css",
    "build:website": "simplifyify online/src/js/index.js --outfile online/js/bundle.js --bundle --debug --minify",
    "bump": "bump --tag --push --all",
    "coverage": "npm run coverage:node && npm run coverage:browser",
    "coverage:browser": "npm run test:browser -- --coverage",
    "coverage:node": "nyc --reporter=text --reporter=lcov --report-dir coverage/node mocha",
    "lint": "eslint lib test online/src/js",
    "release": "npm run upgrade && npm run build && npm test && npm run bump",
    "test": "npm run test:node && npm run test:browser && npm run test:typescript && npm run lint",
    "test:browser": "karma start --single-run",
    "test:node": "mocha",
    "test:typescript": "tsc --noEmit --strict --lib esnext test/specs/typescript-definition.spec.ts",
    "upgrade": "npm-check -u"
  },
  "typings": "lib/index.d.ts",
  "version": "8.0.0"
}
